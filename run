#!/bin/bash

# SPDX-FileCopyrightText: Alliander N. V.
# 
# SPDX-License-Identifier: Apache-2.0

set -e

SCRIPT_DIR_PATH=$(dirname $(realpath "$0"))
MENU_HEIGHT=$(($LINES))
MENU_WIDTH=$(($COLUMNS))
CHOICE_HEIGHT=$MENU_HEIGHT
DOCKER_BUILDER_NAME=ram-constrained-builder

# If required directories do not exist, create them
mkdir -p ~/docker_ws
mkdir -p ~/.vscode-server

# Define image options based on dockerfiles in dockerfiles directory
options=()
for dockerfile in "$SCRIPT_DIR_PATH"/dockerfiles/*.Dockerfile; do
    name=${dockerfile%.*}
    options+=("$(basename "$name")")
    options+=("")
done

# Ask user for image option
image=$(whiptail --clear \
    --title "RCDT Docker Launcher" \
    --menu "Which docker image would you like to run?" \
    $MENU_HEIGHT $MENU_WIDTH $CHOICE_HEIGHT \
    "${options[@]}" \
    2>&1 >/dev/tty)
clear
[[ -z "$image" ]] && exit 1

if [ -z "$(docker images -q $image 2> /dev/null)" ]; then
    build=$(whiptail --clear \
        --title "Build?" \
        --menu "The selected image was not found. Do you want to build the image?" \
        $MENU_HEIGHT $MENU_WIDTH $CHOICE_HEIGHT \
        "yes" "" \
        "yes, without cache" "" \
        2>&1 >/dev/tty)
    clear
    [[ -z "$build" ]] && exit 1

    if [ ! "$(docker buildx inspect $DOCKER_BUILDER_NAME 2> /dev/null)" ]; then
        docker buildx create \
          --name $DOCKER_BUILDER_NAME \
          --driver=docker-container \
          --driver-opt memory=14g \
          --driver-opt default-load=true
    fi

    NO_CACHE=$([ "$build" == "yes, without cache" ] && echo "true" || echo "")
    docker build \
      ${NO_CACHE:+--no-cache} \
      --builder=$DOCKER_BUILDER_NAME \
      --build-arg UNAME="$USER" \
      --build-arg UID="$(id -u)" \
      --build-arg GID="$(id -g)" \
      -t "$image" \
      -f "$SCRIPT_DIR_PATH/dockerfiles/$image.Dockerfile" \
      "$SCRIPT_DIR_PATH/dockerfiles"
fi

echo Running $image ...
docker compose -f $SCRIPT_DIR_PATH/.devcontainer/docker-compose.yml run --rm $image
